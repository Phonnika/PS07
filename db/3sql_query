-- 1. SQL Query: Find the customer with the highest order in each month
-- This query uses a subquery to find the maximum order amount for each month and then joins it with the salesorders and users tables to find the customer who placed that order.
SELECT u.full_name, 
       MONTH(s.order_date) AS order_month, 
       i.total_amount AS highest_order_amount
FROM users u
JOIN salesorders s ON u.user_id = s.user_id
JOIN invoices i ON s.salesorder_id = i.salesorder_id
WHERE i.total_amount = (
    SELECT MAX(i1.total_amount)
    FROM invoices i1
    JOIN salesorders s1 ON s1.salesorder_id = i1.salesorder_id
    WHERE MONTH(s1.order_date) = MONTH(s.order_date)
)
ORDER BY order_month
LIMIT 0, 25;

-- 2. SQL Query: Find the product that is ordered the most each day
-- This query uses a subquery to count the number of times each product is ordered each day and then selects the product with the highest count for each day.
SELECT p.product_name, DATE(s.order_date) AS order_date, COUNT(si.product_id) AS order_count
FROM products p
JOIN salesorder_items si ON p.product_id = si.product_id
JOIN salesorders s ON si.salesorder_id = s.salesorder_id
GROUP BY order_date, p.product_name
ORDER BY order_date, order_count DESC;

-- 3. SQL Query: Find the customer with the most orders
-- This query uses a subquery to count the number of orders placed by each customer and then selects the customer with the highest order count.
SELECT u.full_name, COUNT(s.user_id) AS order_count
FROM users u
JOIN salesorders s ON u.user_id = s.user_id
GROUP BY u.user_id
ORDER BY order_count DESC
LIMIT 1;